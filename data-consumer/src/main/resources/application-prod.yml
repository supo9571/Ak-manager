spring:
  # redis 配置
  redis:
    # 地址
    host: 54.179.46.149
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 0
    # 密码
#    password: Aa2021
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

  # 数据源配置
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://54.179.46.149:3306/sys-data?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: Aa2021
    driver-class-name: com.mysql.cj.jdbc.Driver
    cardNodes: sys-data.data_card_%s,sys-data.data_card_%s,sys-data.data_card_%s
    coinsNodes: sys-data.data_coins_%s,sys-data.data_coins_%s,sys-data.data_coins_%s
    cardUserNodes: sys-data.data_card_user_%s,sys-data.data_card_user_%s,sys-data.data_card_user_%s
    sqlShow: false

  # kafka配置
  kafka:
    bootstrap-servers: 54.179.83.50:9092
    consumer:
      enable-auto-commit: false # 消息的签收机制：手工签收
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      ## 序列化配置
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-commit-interval: 1000ms
      max-poll-records: 100
      properties:
        session.timeout.ms: 15000
    listener:
      ack-mode: manual # 手工签收
      concurrency: 6
