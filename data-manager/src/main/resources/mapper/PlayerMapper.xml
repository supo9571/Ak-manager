<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.data.mapper.PlayerMapper">

    <select id="selectPlayer" resultType="java.util.Map" parameterType="com.manager.common.core.domain.model.PlayUser">
        select uid,name,FROM_UNIXTIME(time) time,channel,agent_id agentId,
        device_id deviceId,register_ip registerIp,device_brand deviceBrand,
        register_machine registerMachine,
        login_ip loginIp,
        login_device_id loginDeviceId,
        login_device_brand loginDeviceBrand,
        vip_level vipLevel,
        phone,safe_box safeBox,
        FROM_UNIXTIME(login_time) loginTime,
        today_add todayAdd,today_red todayRed,today_give todayGive,
        today_water todayWater,today_win todayWin,total_add totalAdd,
        total_red totalRed,total_give totalGive,count_add countAdd,
        total_win totalWin,total_water totalWater
        from data_register
        <where>
            <if test="uid!=null and uid !=''">
                and uid in
                <foreach item="item" index="index" collection="uid.split(',')" open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </if>
            <if test="name!=null and name !=''">
                and name = #{name}
            </if>
            <if test="registerIp!=null and registerIp !=''">
                and register_ip = #{registerIp}
            </if>
            <if test="registerMachine!=null and registerMachine !=''">
                and register_machine = #{registerMachine}
            </if>
            <if test="beginTime!=null and beginTime !=''">
                and time >= UNIX_TIMESTAMP(#{beginTime})
            </if>
            <if test="endTime!=null and endTime !=''">
                and UNIX_TIMESTAMP(#{endTime}) >= time
            </if>
        </where>
    </select>

    <update id="updatePlayer" parameterType="com.manager.common.core.domain.model.PlayUser">
        update data_register
        <set>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="password != null and password != ''">password = #{password},</if>
        </set>
        where uid = #{uid}
    </update>

    <update id="updateBank">
        update data_register
        <set>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="account != null and account != ''">account = #{account},</if>
            <if test="originBank != null and originBank != ''">origin_bank = #{originBank},</if>
        </set>
        where uid = #{uid}
    </update>

    <select id="getRecAndexc" resultType="java.util.Map">
        select today_add todayAdd, today_give todayGive, today_red todayRed,
        total_add totalAdd, total_give totalGive, total_red totalRed
        from data_register
        where uid = #{uid}
    </select>

    <select id="getRechargeInfo" resultType="java.util.Map">
        SELECT finish_time finishTime,
               recharge_amount rechargeAmount,
               recharge_type rechargeType,
               admin_user_id adminUserId
        FROM config_recharge_order
        WHERE uid = #{uid}
        AND payment_status = '1'
    </select>

    <select id="getExchangeInfo" resultType="java.util.Map">
        SELECT create_time createTime,
               withdraw_type withdrawType,
               withdraw_money withdrawMoney
        FROM config_exchange_order
        WHERE uid = #{uid}
        AND exaa_status = '5'
    </select>

    <select id="userInfo" resultType="java.util.Map">
        SELECT uid,name, phone,FROM_UNIXTIME(TIME) registerTime,register_ip registerIp,
            device_id deviceId,client_version clientVersion,
            FROM_UNIXTIME(login_time) loginTime,login_ip loginIp,
        (SELECT finish_time FROM config_recharge_order WHERE uid = uid AND payment_status = '1' ORDER BY finish_time LIMIT 0,1) firstTime,
        (SELECT finish_time FROM config_recharge_order WHERE uid = uid AND payment_status = '1' ORDER BY finish_time desc LIMIT 0,1) lastTime
        FROM data_register
        WHERE uid = #{uid}
    </select>

    <select id="waterInfo" resultType="java.util.Map" parameterType="com.manager.common.core.domain.model.PlayWater">
        select
        c.curr,
        FROM_UNIXTIME(c.`time`) `time`,
        c.`value`,
        c.`before`,
        c.game_type gameType,
        c.r
        from data_coins c
        <where>
            <if test="uid!=null and uid !=''">
                and c.uid = #{uid}
            </if>
            <if test="beginTime!=null and beginTime !=''">
                and c.mstime between #{beginms} and #{endms}
            </if>
            <if test="gameType!=null and gameType !=''">
                and c.game_type in
                <foreach item="item" index="index" collection="gameType.split(',')" open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </if>
            <if test="r!=null and r !=''">
                and c.r in
                <foreach item="item" index="index" collection="r.split(',')" open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </if>
        </where>
    </select>

    <update id="updateToken">
        UPDATE  `data_user`
        SET seed_token = CONCAT(seed_token,"---")
        WHERE account_id = (SELECT account_id FROM data_register WHERE uid = #{uid})
    </update>

    <insert id="saveUserLock">
        insert into data_user_lock(uid, lock_type, lock_day, lock_mark, create_time, update_time, create_by)
        values (#{uid}, #{lockType}, #{lockDay}, #{lockMark}, sysdate(), sysdate(), #{createBy})
        ON DUPLICATE KEY
        UPDATE lock_type=values (lock_type),
            lock_day=values (lock_day),
            lock_mark=values (lock_mark),
            update_time=values (update_time),
            create_by=values (create_by);
    </insert>

    <insert id="saveUserLockLog">
        insert into data_lock_log(uid, lock_type, lock_day, lock_mark, create_time, create_by)
        values (#{uid}, #{lockType}, #{lockDay}, #{lockMark}, sysdate(), #{createBy})
    </insert>
</mapper>
